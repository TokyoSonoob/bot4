require('dotenv').config();
const fs = require('fs');
const path = require('path');

const puppeteer = require('puppeteer-extra');
const Stealth = require('puppeteer-extra-plugin-stealth');
puppeteer.use(Stealth());

const COOKIES_PATH = process.env.cookies;
const GROUP_URLS = [
  'https://web.facebook.com/groups/communitycraft',
  'https://web.facebook.com/groups/506463258587188'
];


const POST_MESSAGE = `‚úøÔΩ•Ôæü: ‚úßÔΩ•Ôæü: ùó¶ùó≤ùóÆ ùó†ùòÇùòÑùòÑ :ÔΩ•Ôæü‚úß:ÔΩ•Ôæü‚úø

‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà
   ‡∏£‡∏±‡∏ö‡∏ó‡∏≥ ùë®ùíÖùíÖ-ùíêùíè ‚Ä¢ ùë∫ùíåùíäùíè ‚Ä¢ ùë™ùíêùíéùíéùíäùíîùíîùíäùíêùíè
                  ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‚ô°
‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà

              ùë®ùíÖùíÖùíêùíè ùë∫ùíåùíäùíè
        ‚Çä Àö‚äπ‚ô° ùë∂ùíëùíïùíäùíêùíèùíî ‚ô°‚äπÀö‚Çä
          ‚Ä¢ ‡∏ú‡∏°‡∏Ç‡∏¢‡∏±‡∏ö 30.-
          ‚Ä¢ ‡∏ï‡∏≤‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö 20.-
          ‚Ä¢ ‡∏ï‡∏≤‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡πÉ‡∏´‡∏°‡πà 35.-
          ‚Ä¢ ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏Å 25.-
          ‚Ä¢ ‡∏õ‡∏≠‡∏¢‡∏ú‡∏° & ‡∏à‡∏∏‡∏Å‡∏ú‡∏° ‡∏à‡∏∏‡∏î‡∏•‡∏∞ 10.-
          ‚Ä¢ ‡∏ï‡∏≤‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á 35.-
          ‚Ä¢ ‡∏ï‡∏≤‡∏Ç‡∏¢‡∏±‡∏ö 100.-

  ‚ãÜÀô‚ü°‚ô°‚ü°Àô‚ãÜ ‚úß ùë∫ùíåùíäùíè 5 ‡∏•‡∏≤‡∏¢‡πÄ‡∏™‡πâ‡∏ô ‚úß ‚ãÜÀô‚ü°‚ô°‚ü°Àô‚ãÜ

          ùë¥ùíñùíö - ùë∫ùíåùíö - ùëØùíäùíåùíÜùíìùíä - ùëµùë± - ùë≤ùíäùíé
       ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á - ‡∏ï‡∏≤‡∏°‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î

   ‚ú¶‚Ä¢ ‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå ‚Ä¢ ‡∏û‡∏∏‡∏ò ‚Ä¢ ‡∏®‡∏∏‡∏Å‡∏£‡πå ‚ú¶‚Ä¢
             ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ù‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ

    ìÜ©‚ô°ìÜ™ ‡∏™‡∏ô‡πÉ‡∏à‡πÉ‡∏´‡πâ‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏¢‡∏¢‡∏¢
    https://discord.gg/jHhQETebMm
    
    `;


const COMPOSER_KEYWORDS = [
  '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô',
  '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå',
  'Write something',
  'Create post',
  '‡πÇ‡∏û‡∏™‡∏ï‡πå'
];


const POST_BUTTON_ARIA = [
  '‡πÇ‡∏û‡∏™‡∏ï‡πå', 'Post', '‡πÅ‡∏ä‡∏£‡πå', 'Share'
];

const delay = ms => new Promise(r => setTimeout(r, ms));

async function loadCookies(page) {
  try {
    if (!fs.existsSync(COOKIES_PATH)) return false;
    const cookies = JSON.parse(fs.readFileSync(COOKIES_PATH, 'utf8'));
    await page.setCookie(...cookies);
    console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î cookies ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    return true;
  } catch (e) {
    console.log('‚ùå ‡πÇ‡∏´‡∏•‡∏î cookies ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', e.message);
    return false;
  }
}

async function saveCookies(page) {
  const cookies = await page.cookies();
  fs.writeFileSync(COOKIES_PATH, JSON.stringify(cookies, null, 2));
  console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å cookies ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
}

// ‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏°/‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏ó‡∏µ‡πà ‚Äú‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‚Äù ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå
async function findButtonByText(page, keywords, { role = 'button', exclude = ['‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô'] } = {}) {
  const handles = await page.$$(`div[role="${role}"], span[role="${role}"], a[role="${role}"]`);
  for (const h of handles) {
    const text = (await page.evaluate(el => el.innerText || '', h)).trim();
    if (!text) continue;
    if (exclude.some(ex => text.includes(ex))) continue;
    if (keywords.some(k => text.includes(k))) return h;
  }
  return null;
}

// ‡∏´‡∏≤ textbox ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÇ‡∏û‡∏™‡∏ï‡πå (‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢ selector)
async function getComposerTextbox(page) {
  const selectors = [
    'div[role="dialog"] div[role="textbox"]', // ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÉ‡∏ô‡πÑ‡∏î‡∏≠‡∏∞‡∏•‡πá‡∏≠‡∏Å
    'div[aria-label][role="textbox"]',
    '[contenteditable="true"][role="textbox"]',
    'div[role="textbox"]'
  ];
  for (const sel of selectors) {
    const el = await page.$(sel);
    if (el) return { el, sel };
  }
  return null;
}

async function ensureLoggedIn(page) {
  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏à‡∏≠ login page ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢ EMAIL/PASSWORD
  if (!(page.url().includes('facebook.com/login') || page.url().includes('checkpoint'))) return true;
  const email = process.env.FB_EMAIL;
  const pass = process.env.FB_PASSWORD;

  if (!email || !pass) {
    console.log('‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà login ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ FB_EMAIL/FB_PASSWORD ‡πÉ‡∏ô .env');
    return false;
  }

  console.log('üîê ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏à‡∏≤‡∏Å .env ...');
  try {
    await page.waitForSelector('#email', { timeout: 15000 });
    await page.type('#email', email, { delay: 40 });
    await page.type('#pass', pass, { delay: 40 });
    const loginBtn = await page.$('button[name="login"], #loginbutton');
    if (loginBtn) await loginBtn.click(); else await page.keyboard.press('Enter');
    await page.waitForNavigation({ waitUntil: 'networkidle2', timeout: 45000 });
    // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏ï‡∏¥‡∏î checkpoint ‡∏Å‡πá‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    if (page.url().includes('checkpoint')) {
      console.log('‚ö†Ô∏è ‡∏ï‡∏¥‡∏î checkpoint (2FA/verify). ‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏à‡∏£‡∏¥‡∏á');
      return false;
    }
    console.log('‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    return true;
  } catch (e) {
    console.log('‚ùå ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', e.message);
    return false;
  }
}

async function clickComposer(page) {
  let btn = await findButtonByText(page, COMPOSER_KEYWORDS, { role: 'button', exclude: ['‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô'] });
  if (!btn) {
    const xpathCandidates = [
      `//div[@role="button" and contains(., "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô") and not(contains(., "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô"))]`,
      `//div[@role="button" and (contains(., "Write") or contains(., "Create post"))]`,
      `//span[contains(., "‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô") and not(contains(., "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô"))]/ancestor::div[@role="button"]`
    ];
    for (const xp of xpathCandidates) {
      const [handle] = await page.$x(xp);
      if (handle) { btn = handle; break; }
    }
  }
  if (!btn) return false;
  await btn.click();
  return true;
}

async function clickPostButton(page) {
  for (const label of POST_BUTTON_ARIA) {
    const sel = `div[aria-label="${label}"], span[aria-label="${label}"]`;
    const el = await page.$(sel);
    if (el) { await el.click(); return true; }
  }
  const [fallback] = await page.$x(
    `//div[@role="dialog"]//div[@role="button" and (contains(., "‡πÇ‡∏û‡∏™‡∏ï‡πå") or contains(., "Post") or contains(., "‡πÅ‡∏ä‡∏£‡πå") or contains(., "Share"))]`
  );
  if (fallback) { await fallback.click(); return true; }

  return false;
}


async function waitForMediaPreviewInDialog(page, timeout = 20000) {
  // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏£‡∏π‡∏õ/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÉ‡∏ô dialog
  const start = Date.now();
  while (Date.now() - start < timeout) {
    const ok = await page.evaluate(() => {
      const dlg = document.querySelector('div[role="dialog"]');
      if (!dlg) return false;
      const hasImg =
        dlg.querySelector('img[src^="blob:"]') ||
        dlg.querySelector('img[alt*="‡∏£‡∏π‡∏õ"], img[alt*="photo"], img[alt*="image"]');
      const hasVideo =
        dlg.querySelector('video') ||
        dlg.querySelector('div[aria-label*="‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"], div[aria-label*="Video"]');
      return !!(hasImg || hasVideo);
    });
    if (ok) return true;
    await delay(500);
  }
  return false;
}

async function uploadMediaToComposer(page, absolutePaths = []) {
  // 1) ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏Å‡πà‡∏≠‡∏ô (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)
  const addMediaSelectors = [
    'div[aria-label="‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"]',
    'div[aria-label="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"]',
    'div[aria-label="‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"]',
    'div[aria-label="‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"]',
    'div[aria-label="Photo/Video"]',
    'div[aria-label="Add photo/video"]',
  ];
  let clicked = false;
  for (const sel of addMediaSelectors) {
    const btn = await page.$(`div[role="dialog"] ${sel}, ${sel}`);
    if (btn) { await btn.click(); clicked = true; break; }
  }
  if (!clicked) console.log('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ ‡∏à‡∏∞‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á');

  // 2) ‡∏´‡∏≤ input[type=file] ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô dialog (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠)
  const inputSelectors = [
    'div[role="dialog"] input[type="file"][accept*="image"], div[role="dialog"] input[type="file"][accept*="video"]',
    'div[role="dialog"] input[type="file"][multiple]',
    'div[role="dialog"] input[type="file"]',
  ];
  let inputs = [];
  for (const sel of inputSelectors) {
    const hs = await page.$$(sel);
    if (hs.length) { inputs = hs; break; }
  }
  if (!inputs.length) {
    await delay(1500);
    for (const sel of inputSelectors) {
      const hs = await page.$$(sel);
      if (hs.length) { inputs = hs; break; }
    }
  }
  if (!inputs.length) {
    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö input[type=file] ‡πÉ‡∏ô dialog');
    return false;
  }

  console.log(`üîé ‡∏û‡∏ö input[type=file] ${inputs.length} ‡∏ä‡πà‡∏≠‡∏á ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå ${absolutePaths.length} ‡πÑ‡∏ü‡∏•‡πå...`);

  // 3) set ‡πÑ‡∏ü‡∏•‡πå (‡∏´‡∏•‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô ‡∏ñ‡πâ‡∏≤‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö multiple; ‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô‡∏¢‡∏¥‡∏á‡∏ó‡∏µ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå)
  let uploaded = false;
  for (const h of inputs) {
    try {
      if (typeof h.setInputFiles === 'function') {
        await h.setInputFiles(absolutePaths);
      } else {
        // fallback ‡∏ó‡∏µ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå
        for (const p of absolutePaths) await h.uploadFile(p);
      }
      uploaded = true;
      break;
    } catch (_) { /* ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏ñ‡∏±‡∏î‡πÑ‡∏õ */ }
  }
  if (!uploaded) {
    console.log('‚ùå ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Ç‡πâ‡∏≤ input ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    return false;
  }

  // 4) ‡∏£‡∏≠‡πÉ‡∏´‡πâ preview ‡∏Ç‡∏∂‡πâ‡∏ô
  const ok = await waitForMediaPreviewInDialog(page, 20000);
  if (ok) {
    console.log('üì∏/üé¨ ‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏∑‡πà‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß');
    return true;
  }
  console.log('‚ö†Ô∏è ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß');
  return false;
}



const jitter = (minMs, maxMs) => Math.floor(Math.random() * (maxMs - minMs + 1)) + minMs;

async function closeAnyDialog(page) {
  // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ dialog ‡∏Ñ‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
  try {
    await page.evaluate(() => {
      const dlg = document.querySelector('div[role="dialog"]');
      if (!dlg) return;
      // ‡∏´‡∏≤ X close
      const btns = Array.from(dlg.querySelectorAll('div[role="button"],button'));
      const closeBtn = btns.find(b =>
        /‡∏õ‡∏¥‡∏î|Close|‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å|Cancel/i.test(b.innerText || '') ||
        b.getAttribute('aria-label')?.match(/‡∏õ‡∏¥‡∏î|Close|‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å|Cancel/i)
      );
      closeBtn?.click();
    });
    await delay(800);
  } catch {}
}

// ‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 1 ‡∏Å‡∏•‡∏∏‡πà‡∏° (‡∏£‡∏µ‡πÑ‡∏ã‡πÄ‡∏Ñ‡∏¥‡∏•‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)
async function postToGroup(page, groupUrl, POST_MESSAGE) {
  console.log(`\n‚û°Ô∏è ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏Å‡∏•‡∏∏‡πà‡∏°: ${groupUrl}`);
  // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°
  await page.goto(groupUrl, { waitUntil: 'networkidle2', timeout: 60000 });

  // ‡∏ñ‡πâ‡∏≤‡∏´‡∏•‡∏∏‡∏î login ‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πá‡∏Ñ
  if (!(await ensureLoggedIn(page))) return false;

  // ‡∏£‡∏≠‡πÉ‡∏´‡πâ timeline ‡πÇ‡∏´‡∏•‡∏î
  await delay(2500);

  // ‡πÄ‡∏õ‡∏¥‡∏î composer
  let opened = await clickComposer(page);
  if (!opened) {
    console.log('‚ö†Ô∏è ‡∏´‡∏≤ ‚Äú‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå‚Äù ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà 1 ‡∏•‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô');
    await page.evaluate(() => window.scrollBy(0, 800));
    await delay(1400);
    opened = await clickComposer(page);
  }
  if (!opened) {
    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå');
    return false;
  }

  // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£
  await delay(1800);

  // ====== ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏∑‡πà‡∏≠ (test.png + main.mp4 ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) ======
  const imagePath = path.resolve('./test.png');
  const videoPath = path.resolve('./main.mp4');
  const mediaPaths = [imagePath, videoPath].filter(p => fs.existsSync(p));

  if (mediaPaths.length) {
    // ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏∑‡πà‡∏≠ (‡πÑ‡∏ó‡∏¢/‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© ‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö)
    const addMediaSelectors = [
      'div[aria-label="‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"]',
      'div[aria-label="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"]',
      'div[aria-label="‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"]',
      'div[aria-label="‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"]',
      'div[aria-label="Photo/Video"]',
      'div[aria-label="Add photo/video"]'
    ];
    let clicked = false;
    for (const sel of addMediaSelectors) {
      const btn = await page.$(`div[role="dialog"] ${sel}, ${sel}`);
      if (btn) { await btn.click(); clicked = true; break; }
    }
    if (!clicked) console.log('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ ‡∏à‡∏∞‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á');

    // ‡∏´‡∏≤ input[type=file] ‡πÉ‡∏ô dialog
    let inputs = [];
    const inputSelectors = [
      'div[role="dialog"] input[type="file"][accept*="image"], div[role="dialog"] input[type="file"][accept*="video"]',
      'div[role="dialog"] input[type="file"][multiple]',
      'div[role="dialog"] input[type="file"]'
    ];
    for (const sel of inputSelectors) {
      const hs = await page.$$(sel);
      if (hs.length) { inputs = hs; break; }
    }
    if (!inputs.length) {
      await delay(1500);
      for (const sel of inputSelectors) {
        const hs = await page.$$(sel);
        if (hs.length) { inputs = hs; break; }
      }
    }
    if (!inputs.length) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö input[type=file] ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô dialog');
    } else {
      console.log(`üîé ‡∏û‡∏ö input[type=file] ${inputs.length} ‡∏ä‡πà‡∏≠‡∏á ‚Äî ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ${mediaPaths.length} ‡πÑ‡∏ü‡∏•‡πå...`);
      let uploaded = false;
      for (const h of inputs) {
        try {
          if (typeof h.setInputFiles === 'function') {
            await h.setInputFiles(mediaPaths);
          } else {
            for (const p of mediaPaths) await h.uploadFile(p);
          }
          uploaded = true;
          break;
        } catch {}
      }
      if (uploaded) {
        const previewOk = await page.waitForFunction(() => {
          const dlg = document.querySelector('div[role="dialog"]');
          if (!dlg) return false;
          const hasImg = dlg.querySelector('img[src^="blob:"]') ||
                         dlg.querySelector('img[alt*="‡∏£‡∏π‡∏õ"], img[alt*="photo"], img[alt*="image"]');
          const hasVideo = dlg.querySelector('video') ||
                           dlg.querySelector('[aria-label*="‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠"], [aria-label*="Video"]');
          return !!(hasImg || hasVideo);
        }, { timeout: 25000 }).catch(() => false);
        console.log(previewOk ? 'üì∏/üé¨ ‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏∑‡πà‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß' : '‚ö†Ô∏è ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß');
        if (!previewOk) await delay(4000);
      } else {
        console.log('‚ùå ‡πÉ‡∏™‡πà‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Ç‡πâ‡∏≤ input ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      }
    }
  } else {
    console.log('‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö test.png/main.mp4 ‚Äî ‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°');
  }

  // ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
  await page.waitForSelector('div[role="dialog"]', { timeout: 20000 });
  let textbox = await getComposerTextbox(page);
  if (!textbox) { await delay(900); textbox = await getComposerTextbox(page); }
  if (!textbox) { console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏û‡∏™‡∏ï‡πå'); return false; }
  await textbox.el.focus();
  await page.type(textbox.sel, POST_MESSAGE, { delay: 40 });
  await delay(800);

  // ‡∏£‡∏≠‡∏õ‡∏∏‡πà‡∏°‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏û‡∏£‡πâ‡∏≠‡∏° (‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡πÄ‡∏ó‡∏≤‡∏£‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏™‡∏∑‡πà‡∏≠)
  await page.waitForFunction(() => {
    const btns = Array.from(document.querySelectorAll('div[role="button"]'));
    const btn = btns.find(el => /‡πÇ‡∏û‡∏™‡∏ï‡πå|Post|‡πÅ‡∏ä‡∏£‡πå|Share/i.test(el.innerText || ''));
    if (!btn) return true;
    const disabled = btn.getAttribute('aria-disabled') === 'true' || (btn.className||'').includes('disabled');
    return !disabled;
  }, { timeout: 30000 }).catch(() => {});

  // ‡∏Å‡∏î‡πÇ‡∏û‡∏™‡∏ï‡πå
  const posted = await clickPostButton(page);
  if (!posted) {
    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° ‚Äú‡πÇ‡∏û‡∏™‡∏ï‡πå‚Äù/Post');
    await page.screenshot({ path: `cannot_find_post_button_${Date.now()}.png` });
    return false;
  }

  console.log('‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå...');
  await page.waitForFunction(() => !document.querySelector('div[role="dialog"]'), { timeout: 45000 }).catch(() => {});
  console.log('‚úÖ ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤)');

  return true;
}


const cron = require('node-cron');

// ‡∏Å‡∏±‡∏ô‡∏á‡∏≤‡∏ô‡∏ä‡∏ô‡∏Å‡∏±‡∏ô ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏£‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ
let isRunning = false;
async function safeRun() {
  if (isRunning) {
    console.log('‚è≥ ‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏à‡∏ö ‡∏Ç‡πâ‡∏≤‡∏°‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô');
    return;
  }
  isRunning = true;
  try {
    await run();
  } catch (e) {
    console.error('‚ùå run() ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', e);
  } finally {
    isRunning = false;
  }
}



// ‚è∞ ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡∏≤‡∏°‡πÇ‡∏ã‡∏ô‡πÑ‡∏ó‡∏¢ Asia/Bangkok
// 12:00 ‡∏ô. ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô
cron.schedule('0 12 * * *', () => {
  console.log('üïõ ‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 12:00 Asia/Bangkok ‚Üí ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏û‡∏™‡∏ï‡πå');
  safeRun();
}, { timezone: 'Asia/Bangkok' });

// 00:00 ‡∏ô. ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô
cron.schedule('0 0 * * *', () => {
  console.log('üïõ ‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 00:00 Asia/Bangkok ‚Üí ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏û‡∏™‡∏ï‡πå');
  safeRun();
}, { timezone: 'Asia/Bangkok' });



async function run() {
  const browser = await puppeteer.launch({
    headless: false,
    args: [
      '--no-sandbox',
      '--disable-setuid-sandbox',
      '--lang=th-TH,th,en-US,en',
      '--disable-blink-features=AutomationControlled'
    ],
    defaultViewport: { width: 1366, height: 768 }
  });

  const page = await browser.newPage();
  await page.setUserAgent(
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36'
  );

  await loadCookies(page);

  for (let i = 0; i < GROUP_URLS.length; i++) {
    const url = GROUP_URLS[i];
    try {
      // ‡∏Å‡∏±‡∏ô dialog ‡∏Ñ‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô
      await closeAnyDialog(page);

      // ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ
      const ok = await postToGroup(page, url, POST_MESSAGE);

      // ‡πÄ‡∏ã‡∏ü‡∏Ñ‡∏∏‡∏Å‡∏Å‡∏µ‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏ö 1 ‡∏Å‡∏•‡∏∏‡πà‡∏°
      await saveCookies(page);

      // ‡∏î‡∏µ‡πÄ‡∏•‡∏¢‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏° (‡∏™‡∏∏‡πà‡∏° 5‚Äì9 ‡∏ß‡∏¥)
      if (i < GROUP_URLS.length - 1) {
        const waitMs = jitter(5000, 9000);
        console.log(`üïí ‡∏£‡∏≠ ${Math.round(waitMs/1000)} ‡∏ß‡∏¥ ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ...`);
        await delay(waitMs);
      }

      if (!ok) console.log('‚ö†Ô∏è ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏î‡∏π log ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô)');

    } catch (err) {
      console.error(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏° ${url}:`, err.message);
      // ‡πÄ‡∏ß‡πâ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
      await delay(jitter(4000, 8000));
    }
  }

  await browser.close();
}
